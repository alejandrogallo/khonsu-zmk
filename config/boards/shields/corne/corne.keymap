
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define SYMBOLS 1
#define MOVEMENT 2
/ {
combos {
combo_esc_1 {
timeout-ms = <25>;
bindings = <&kp ESC>
key-positions = <8 9>;
};
combo_esc_2 {
timeout-ms = <25>;
bindings = <&kp ESC>
key-positions = <4 3>;
};
combo_enter_1 {
timeout-ms = <25>;
bindings = <&kp RET>
key-positions = <20 21>;
};
combo_enter_2 {
timeout-ms = <25>;
bindings = <&kp RET>
key-positions = <15 16>;
};
combo_tab_1 {
timeout-ms = <25>;
bindings = <&kp TAB>
key-positions = <32 33>;
};
combo_tab_2 {
timeout-ms = <25>;
bindings = <&kp TAB>
key-positions = <27 28>;
};
combo_bkspc_1 {
timeout-ms = <25>;
bindings = <&kp BSPC>
key-positions = <19 20>;
};
combo_bkspc_2 {
timeout-ms = <25>;
bindings = <&kp BSPC>
key-positions = <16 17>;
};
combo_ctl_r_1 {
timeout-ms = <25>;
bindings = <&kp RCTRL>
key-positions = <21 22>;
};
combo_ctl_l_1 {
timeout-ms = <25>;
bindings = <&kp LCTRL>
key-positions = <14 15>;
};
combo_alt_1 {
timeout-ms = <25>;
bindings = <&kp LALT>
key-positions = <33 34>;
};
combo_alt_2 {
timeout-ms = <25>;
bindings = <&kp LALT>
key-positions = <26 27>;
};
combo_gui_r_1 {
timeout-ms = <25>;
bindings = <&kp RGUI>
key-positions = <9 10>;
};
combo_gui_l_1 {
timeout-ms = <25>;
bindings = <&kp LGUI>
key-positions = <2 3>;
};
combo_alt_ctrl_1 {
timeout-ms = <25>;
bindings = <&kp LA(LCTRL)>
key-positions = <4 5>;
};
combo_alt_ctrl_2 {
timeout-ms = <25>;
bindings = <&kp LA(LCTRL)>
key-positions = <7 8>;
};
};

keymap {
compatible = "zmk,keymap";

default_layer {
bindings = <
&trans &kp Q &kp W &kp E &kp R &kp T &trans &kp Y &kp U &kp I &kp O &kp P 
&trans &kp A &kp S &kp D &kp F &kp G &trans &kp H &kp J &kp K &kp L &kp SEMI 
&trans &kp Z &kp X &kp C &kp V &kp B &trans &kp N &kp M &kp COMMA &kp DOT &kp FSLH 
   &mo Movement &mt RSHFT RET &mt RCTRL ESC  &kp SPACE &mo SYMBOLS &kp RGUI   

>;
};
symbols_layer {
bindings = <
&trans &kp EXCL &kp AT &kp HASH &kp DOLLAR &kp PIPE &trans &kp LANG1 &kp N7 &kp N8 &kp N9 &kp DOT 
&trans &kp LBRC &kp RBRC &kp SQT &kp GRAVE &kp BSLH &trans &kp BSPC &kp N4 &kp N5 &kp N6 &kp EQUAL 
&trans &kp LBKT &kp RBKT &kp LPAR &kp RPAR &kp AMPS &trans &kp N0 &kp N1 &kp N2 &kp N3 &kp MINUS 
   &trans &trans &trans  &trans &trans &trans   

>;
};
movement_layer {
bindings = <
&trans &kp HOME &trans &kp PG_DN &kp PG_UP &trans &trans &kp RET &bt BT_PRV &trans &bt BT_NXT &kp DEL 
&trans &kp END &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &kp INS 
&trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &trans &bt BT_CLR &trans &trans &trans &kp ESC 
   &trans &trans &trans  &kp LALT &kp RSHFT &kp RCTRL   

>;
};

};

};